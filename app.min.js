const path=require("path"),express=require("express"),bodyParser=require("body-parser"),mongoose=require("mongoose"),session=require("express-session"),MongoDBStore=require("connect-mongodb-session")(session),csrf=require("csurf"),flash=require("connect-flash"),errorController=require("./controllers/error"),User=require("./models/user"),MONGODB_URI="mongodb+srv://steel-01:w5Z1RumGpuep8AEz@cluster0.zdpub.mongodb.net/steel-01",app=express(),store=new MongoDBStore({uri:MONGODB_URI,collection:"sessions"}),csrfProtection=csrf();app.set("view engine","ejs"),app.set("views","views");const adminRoutes=require("./routes/admin"),pagesRoutes=require("./routes/home"),authRoutes=require("./routes/auth");app.use(bodyParser.urlencoded({extended:!1})),app.use(express.static(path.join(__dirname,"public"))),app.use(session({secret:"my secret",resave:!1,saveUninitialized:!1,store:store})),app.use(csrfProtection),app.use(flash()),app.use((req,res,next)=>{if(!req.session.user)return next();User.findById(req.session.user._id).then(user=>{req.user=user,next()}).catch(err=>console.log(err))}),app.use((req,res,next)=>{res.locals.isAuthenticated=req.session.isLoggedIn,res.locals.csrfToken=req.csrfToken(),next()}),app.use("/admin",adminRoutes),app.use(pagesRoutes),app.use(authRoutes),app.use(errorController.get404),mongoose.connect(MONGODB_URI,{useNewUrlParser:!0,useUnifiedTopology:!0}).then(result=>{app.listen(3e3)}).catch(err=>{console.log(err)});