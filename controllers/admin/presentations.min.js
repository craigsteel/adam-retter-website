const Presentation=require("../../models/presentations");exports.getAddPresentation=(req,res,next)=>{res.render("admin/edit-presentations",{pageTitle:"Add Presentation",path:"/admin/add-presentations",editing:!1})},exports.postAddPresentation=(req,res,next)=>{const title=req.body.title,description=req.body.description,firstIcon=req.body.firstIcon,firstLink=req.body.firstLink,firstLinkText=req.body.firstLinkText,secondIcon=req.body.secondIcon,secondLink=req.body.secondLink,secondLinkText=req.body.secondLinkText,thirdIcon=req.body.thirdIcon,thirdLink=req.body.thirdLink,thirdLinkText=req.body.firstLinkText,presentation=new Presentation({title:title,description:description,firstIcon:firstIcon,firstLink:firstLink,firstLinkText:firstLinkText,secondIcon:secondIcon,secondLink:secondLink,secondLinkText:secondLinkText,thirdIcon:thirdIcon,thirdLink:thirdLink,thirdLinkText:thirdLinkText,userId:req.user});presentation.save().then(result=>{console.log("Created Presentation"),res.redirect("/admin/all-presentations")}).catch(err=>{console.log(err)})},exports.getEditPresentation=(req,res,next)=>{const editMode=req.query.edit;if(!editMode)return res.redirect("/");const presId=req.params.presentationId;Presentation.findById(presId).then(presentation=>{if(!presentation)return res.redirect("/");res.render("admin/edit-presentations",{pageTitle:"Edit Presentation",path:"/admin/edit-presentations",editing:editMode,presentation:presentation})}).catch(err=>console.log(err))},exports.postEditPresentation=(req,res,next)=>{const presId=req.body.presentationId,updatedTitle=req.body.title,updatedDescription=req.body.description,updatedFirstIcon=req.body.firstIcon,updatedFirstLink=req.body.firstLink,updatedFirstLinkText=req.body.firstLinkText,updatedSecondIcon=req.body.secondIcon,updatedSecondLink=req.body.secondLink,updatedSecondLinkText=req.body.secondLinkText,updatedThirdIcon=req.body.thirdIcon,updatedThirdLink=req.body.thirdLink,updatedThirdLinkText=req.body.thirdLinkText;Presentation.findById(presId).then(presentation=>(presentation.title=updatedTitle,presentation.description=updatedDescription,presentation.firstIcon=updatedFirstIcon,presentation.firstLink=updatedFirstLink,presentation.firstLinkText=updatedFirstLinkText,presentation.secondIcon=updatedSecondIcon,presentation.secondLink=updatedSecondLink,presentation.secondLinkText=updatedSecondLinkText,presentation.thirdIcon=updatedThirdIcon,presentation.thirdLink=updatedThirdLink,presentation.thirdLinkText=updatedThirdLinkText,presentation.save())).then(result=>{console.log("Updated Presentation"),res.redirect("/admin/all-presentations")}).catch(err=>console.log(err))},exports.getPresentations=(req,res,next)=>{Presentation.find().then(presentations=>{console.log(presentations),res.render("admin/all-presentations",{pres:presentations,pageTitle:"Admin All presentations",path:"/admin/all-presentations"})}).catch(err=>console.log(err))},exports.postDeletePresentation=(req,res,next)=>{const presId=req.body.presentationId;Presentation.deleteById(presId).then(()=>{console.log("DESTROYED PRESENTATION"),res.redirect("/admin/all-presentations")}).catch(err=>console.log(err))};